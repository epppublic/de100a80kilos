"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  addValue: true,
  dataToItem: true,
  deltaToUpdateParams: true,
  itemToData: true
};
exports.itemToData = exports.deltaToUpdateParams = exports.dataToItem = exports.addValue = void 0;

var _addValue = require("./factories/add-value");

var _convertDataArray = require("./factories/convert-data-array");

var _convertDataObject = require("./factories/convert-data-object");

var _convertDataValue = require("./factories/convert-data-value");

var _convertDelta = require("./factories/convert-delta");

var _convertItemArray = require("./factories/convert-item-array");

var _convertItemObject = require("./factories/convert-item-object");

var _convertItemValue = require("./factories/convert-item-value");

var _createPropertyName = require("./factories/create-property-name");

var _formAddStatement = require("./factories/form-add-statement");

var _formRemoveStatement = require("./factories/form-remove-statement");

var _formSetStatement = require("./factories/form-set-statement");

var _isIllegalWord = require("./factories/is-illegal-word");

var _isReservedWord = require("./factories/is-reserved-word");

var _booleanItemValue = require("./guards/boolean-item-value");

var _dataArray = require("./guards/data-array");

var _dataObject = require("./guards/data-object");

var _listItemValue = require("./guards/list-item-value");

var _mapItemValue = require("./guards/map-item-value");

var _nullItemValue = require("./guards/null-item-value");

var _numberItemValue = require("./guards/number-item-value");

var _stringItemValue = require("./guards/string-item-value");

var _reservedWords = require("./reserved-words");

var _index = require("./interfaces/index");

Object.keys(_index).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index[key];
    }
  });
});

var _index2 = require("./types/index");

Object.keys(_index2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index2[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index2[key];
    }
  });
});

/*
 * @todo Explicitly referencing the barrel file seems to be necessary when enabling the
 * isolatedModules compiler option.
 */
const addSymbol = Symbol('add');
const convertDataValue = (0, _convertDataValue.createConvertDataValue)(_convertDataArray.createConvertDataArray, _convertDataObject.createConvertDataObject, _dataArray.isDataArray, _dataObject.isDataObject);
const illegalWordRegex = /[\s|.]/g;
const createPropertyName = (0, _createPropertyName.createCreatePropertyName)(illegalWordRegex);
const isReservedWord = (0, _isReservedWord.createIsReservedWord)(_reservedWords.RESERVED_WORDS);
const isIllegalWord = (0, _isIllegalWord.createIsIllegalWord)(illegalWordRegex, isReservedWord);
const formAddStatement = (0, _formAddStatement.createFormAddStatement)(convertDataValue, createPropertyName, isIllegalWord);
const formRemoveStatement = (0, _formRemoveStatement.createFormRemoveStatement)(createPropertyName, isIllegalWord);
const formSetStatement = (0, _formSetStatement.createFormSetStatement)(convertDataValue, createPropertyName, isIllegalWord);
const addValue = (0, _addValue.createAddValue)(addSymbol);
exports.addValue = addValue;
const dataToItem = (0, _convertDataObject.createConvertDataObject)(convertDataValue);
exports.dataToItem = dataToItem;
const deltaToUpdateParams = (0, _convertDelta.createConvertDelta)(addSymbol, formAddStatement, formRemoveStatement, formSetStatement);
exports.deltaToUpdateParams = deltaToUpdateParams;
const itemToData = (0, _convertItemObject.createConvertItemObject)((0, _convertItemValue.createConvertItemValue)(_convertItemArray.createConvertItemArray, _convertItemObject.createConvertItemObject, _booleanItemValue.isBooleanItemValue, _listItemValue.isListItemValue, _mapItemValue.isMapItemValue, _nullItemValue.isNullItemValue, _numberItemValue.isNumberItemValue, _stringItemValue.isStringItemValue));
exports.itemToData = itemToData;