import type { isDataArray as isDataArrayFunction } from '../guards/data-array';
import type { isDataObject as isDataObjectFunction } from '../guards/data-object';
import { TConvertDataArrayFactory, TConvertDataObjectFactory, TDataValue, TDerivedItemValue } from '../types';
export declare const createConvertDataValue: (createConvertDataArray: TConvertDataArrayFactory, createConvertDataObject: TConvertDataObjectFactory, isDataArray: typeof isDataArrayFunction, isDataObject: typeof isDataObjectFunction) => <T extends TDataValue>(value: T) => TDerivedItemValue<T>;
//# sourceMappingURL=convert-data-value.d.ts.map